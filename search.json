[{"path":"https://uscbiostats.github.io/MRIreduce/articles/MRIreduce.html","id":"roi-reference-table-overview","dir":"Articles","previous_headings":"","what":"ROI Reference Table Overview","title":"Introduction to MRIreduce","text":"130 ROIs total. table showing indication relation ROI, including index (tind), text label (roi_text_label), ROI identification (roi):","code":""},{"path":"https://uscbiostats.github.io/MRIreduce/articles/MRIreduce.html","id":"process-t1-weighted-brain-mri-data-with-fsl-and-register-to-eve-atlas","dir":"Articles","previous_headings":"","what":"Process T1-weighted Brain MRI Data with FSL and Register to EVE Atlas","title":"Introduction to MRIreduce","text":"Ensure FSL installed per instructions provided package README. vignette outlines sequential steps involved image processing pipeline, designed prepare analyze T1-weighted brain MRI data effectively: Image Reorientation: Adjusts image align standard orientation, facilitating consistent analyses comparisons. Bias Correction: Reduces scanner-induced intensity inhomogeneities improve tissue contrast measurement accuracy. Brain Extraction: Isolates brain surrounding skull non-brain tissues, critical accurate subsequent analyses. Image Registration (EVE template): Aligns MRI data EVE Atlas, ensuring anatomical regions correctly mapped comparable across datasets. Extraction Intensity Data: Gathers crucial signal intensity information brain images, fundamental detailed tissue analysis. Segmentation: Divides brain White Matter (WM), Gray Matter (GM), Cerebrospinal Fluid (CSF), allowing targeted studies distinct tissue types. Extraction Tissue Mask Array Data: Retrieves detailed spatial information tissue distribution, essential volume location-specific studies. Intracranial Brain Volume Calculation: Computes total brain volume, providing baseline various comparative diagnostic assessments. following structured steps, users can ensure comprehensive processing MRI data, facilitating robust analyses research conclusions. fpath: character string specifying path one T1-weighted MRI file. file NIFTI file format (.nii.gz). Processing may take time, please patient. handling multiple MRI files, consider using parallel processing R’s parallel computation packages high-performance computing resources improve efficiency. Sample outcome:","code":"eve_T1(fpath, outpath, fsl_path , fsl_outputtype = \"NIFTI_GZ\") #> [1] 181 217 181"},{"path":"https://uscbiostats.github.io/MRIreduce/articles/MRIreduce.html","id":"run-partition-pipeline-on-neuroimaging-data","dir":"Articles","previous_headings":"","what":"Run Partition Pipeline on Neuroimaging Data","title":"Introduction to MRIreduce","text":"section describes utilize pipeline processing neuroimaging data sequential application sophisticated algorithms segmentation based Regions Interest (ROIs).","code":""},{"path":"https://uscbiostats.github.io/MRIreduce/articles/MRIreduce.html","id":"pipeline-overview","dir":"Articles","previous_headings":"Run Partition Pipeline on Neuroimaging Data","what":"Pipeline Overview:","title":"Introduction to MRIreduce","text":"Super-Partition: Applies Josh’s super-partition algorithm, considers 3D locations group data based ROIs. Partition Algorithm: Processes data post Super-Partition using Partition algorithm, enhancing data reduction highly correlated data. Tissue Segmentation: Segments processed data tissue type within ROI.","code":""},{"path":"https://uscbiostats.github.io/MRIreduce/articles/MRIreduce.html","id":"practical-example","dir":"Articles","previous_headings":"Run Partition Pipeline on Neuroimaging Data","what":"Practical Example:","title":"Introduction to MRIreduce","text":"process ROI named “inferior_frontal_gyrus”, identify corresponding tind (example, tind = 5) Region Labels Structures section. ’ll need set directory manage processing files datasets. Note outputs pipeline returned directly stored specified locations: Intensity data: /main_dir/partition/roi/thresh/tissue_type/cmb/intensities_whole.rds Volume data: /main_dir/partition/roi/thresh/tissue_type/cmb/volume_whole.rds","code":""},{"path":"https://uscbiostats.github.io/MRIreduce/articles/MRIreduce.html","id":"parallel-processing","dir":"Articles","previous_headings":"Run Partition Pipeline on Neuroimaging Data","what":"Parallel Processing:","title":"Introduction to MRIreduce","text":"function equipped parallel processing capabilities, allowing users specify number cores wish utilize. Increasing number cores proportionally speed Partition process, offering significant time savings large datasets.","code":"# Run the partition pipeline with specified parameters run_partition_pipeline(   tind = 5,    nfl = list.files(     '/Users/jinyaotian/Downloads/pipeline_test/eve_t1',      full.names = TRUE   ),   main_dir = \"/Users/jinyaotian/Downloads/pipeline_test\",   tissue_type = 2,   ICC_thresh_vec = c(0.8, 0.9),   num_cores = 4,   suppar_thresh_vec = seq(0.7, 1, 0.01),   B = 2000,   outp_volume = TRUE )"},{"path":"https://uscbiostats.github.io/MRIreduce/articles/MRIreduce.html","id":"reduced-data-showcase","dir":"Articles","previous_headings":"Run Partition Pipeline on Neuroimaging Data","what":"Reduced data showcase","title":"Introduction to MRIreduce","text":"Intensity: Naming convention: two types feature naming formats: First part: “inferior_frontal_gyrus_left” corresponds roi_text_label, refers region interest (ROI) outlined ROI Reference Table Overview . Second part: “module6” indicates feature belongs group 6 Super-Partition process. Users can disregard part, primarily programming purposes. Third part: “reduced_var_2” signifies second reduced feature within “module6” following Partition process. “inferior_frontal_gyrus_left_V20234”: format indicates feature reduced Partition algorithm. “V20234” refers column 20234 original high-dimensional data.","code":""},{"path":"https://uscbiostats.github.io/MRIreduce/articles/MRIreduce.html","id":"map-reduced-feature-to-brain-image-voxel-locations","dir":"Articles","previous_headings":"","what":"Map Reduced Feature to Brain Image Voxel Locations","title":"Introduction to MRIreduce","text":"voxel brain image corresponds specific feature, establishing one--one mapping voxel feature. relationship allows us localize particular brain features specific brain areas voxel level, enabling visualization features. However, applying Super-Partition Partition techniques, multiple brain features aggregated single reduced feature part data reduction process. goal following function relate reduced feature back component features, subsequently identify brain image voxels component features mapped. example, want analyze reduced feature “inferior_frontal_gyrus_left_module4_reduced_var_13”. , shows loc_df dataset reduced feature “inferior_frontal_gyrus_left_module4_reduced_var_13”. shows reduced feature “inferior_frontal_gyrus_left_module4_reduced_var_13” aggregated 488 features “V14942”, “V14943”, “V14894”, “V19659”, “V21519”, “V21520”, “V4237”, “V6245”, “V4809”, “V3634”……","code":"loc_df <- map_feature2_loc(feature_name = \"inferior_frontal_gyrus_left_module4_reduced_var_13\",                             threshold = 0.8,                             main_dir = \"/path/to/data\")"},{"path":"https://uscbiostats.github.io/MRIreduce/articles/MRIreduce.html","id":"visualizing-a-mask-image-on-the-eve-template","dir":"Articles","previous_headings":"","what":"Visualizing a Mask Image on the EVE Template","title":"Introduction to MRIreduce","text":"section Mapping Reduced Features Brain Image Voxel Locations, learned map features interest brain image voxels EVE template. Now, visualize mapping. achieve , use nilearn.plotting.plot_anat function Python nilearn library. Detailed documentation function can found following link: Plot Anatomical Image - nilearn.plot_anat Documentation example : Note: mask_img_path point loc_df data generated function map_feature2_loc.","code":"map2_eve(mask_img_path = \"~/mask_nifti_GM_Volume_pm25_test1_avg_red.nii.gz\",          save_path = '~/test.png',          title = \"Mask on EVE Template\" )"},{"path":"https://uscbiostats.github.io/MRIreduce/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joshua Milstein. Author. Jinyao Tian. Author, maintainer.","code":""},{"path":"https://uscbiostats.github.io/MRIreduce/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Milstein J, Tian J (2024). MRIreduce: MRIreduce: R Package ROI-Based Transformation Neuroimages High-Dimensional Data Frames. R package version 0.3.0, https://github.com/jtian123/MRIreduce.","code":"@Manual{,   title = {MRIreduce: MRIreduce: An R Package for ROI-Based Transformation of Neuroimages into High-Dimensional Data Frames},   author = {Joshua Milstein and Jinyao Tian},   year = {2024},   note = {R package version 0.3.0},   url = {https://github.com/jtian123/MRIreduce}, }"},{"path":[]},{"path":"https://uscbiostats.github.io/MRIreduce/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"MRIreduce: An R Package for ROI-Based Transformation of Neuroimages into High-Dimensional Data Frames","text":"MRIreduce advanced R package designed convert NIfTI format T1/FL neuroimages structured, high-dimensional 2D data frames, focusing region interest (ROI) based processing. package incorporates key algorithm called ‘partition’, offers fast, flexible framework agglomerative partitioning based Direct-Measure-Reduce approach. method ensures reduced variable maintains user-specified minimum level information interpretable, maps uniquely one variable reduced dataset. ‘partition’ algorithm, detailed Millstein et al. (2020), allows customization variable selection, measurement information loss, data reduction methods. MRIreduce indispensable researchers requiring efficient, accurate preparation neuroimaging data detailed statistical analysis machine learning applications, enhancing interpretability utility neuroimaging studies.","code":""},{"path":"https://uscbiostats.github.io/MRIreduce/index.html","id":"installation-instructions","dir":"","previous_headings":"","what":"Installation Instructions","title":"MRIreduce: An R Package for ROI-Based Transformation of Neuroimages into High-Dimensional Data Frames","text":"document provides detailed steps install necessary dependencies package. Please follow instructions carefully ensure dependencies correctly installed.","code":""},{"path":"https://uscbiostats.github.io/MRIreduce/index.html","id":"step-1-install-devtools","dir":"","previous_headings":"Installation Instructions","what":"Step 1: Install devtools","title":"MRIreduce: An R Package for ROI-Based Transformation of Neuroimages into High-Dimensional Data Frames","text":"devtools package essential installing packages directly GitHub. devtools installed, run following code:","code":"if (!requireNamespace(\"devtools\", quietly = TRUE))     install.packages(\"devtools\")"},{"path":"https://uscbiostats.github.io/MRIreduce/index.html","id":"step-2-install-antsr","dir":"","previous_headings":"Installation Instructions","what":"Step 2: Install ANTsR","title":"MRIreduce: An R Package for ROI-Based Transformation of Neuroimages into High-Dimensional Data Frames","text":"ANTsR critical package medical image analysis R. Install using devtools following command:","code":"devtools::install_github('ANTsX/ANTsR')"},{"path":"https://uscbiostats.github.io/MRIreduce/index.html","id":"step-3-install-fslr","dir":"","previous_headings":"Installation Instructions","what":"Step 3: Install fslr","title":"MRIreduce: An R Package for ROI-Based Transformation of Neuroimages into High-Dimensional Data Frames","text":"fslr package interface FSL (FMRIB Software Library) tools. Install GitHub:","code":"devtools::install_github(\"muschellij2/fslr\")"},{"path":"https://uscbiostats.github.io/MRIreduce/index.html","id":"step-4-install-evetemplate","dir":"","previous_headings":"Installation Instructions","what":"Step 4: Install EveTemplate","title":"MRIreduce: An R Package for ROI-Based Transformation of Neuroimages into High-Dimensional Data Frames","text":"EveTemplate package can installed using remotes. First, ensure remotes installed: install EveTemplate:","code":"if (!requireNamespace(\"remotes\", quietly = TRUE))     install.packages(\"remotes\") remotes::install_github(\"neuroconductor/EveTemplate\")"},{"path":"https://uscbiostats.github.io/MRIreduce/index.html","id":"step-5-install-extrantsr","dir":"","previous_headings":"Installation Instructions","what":"Step 5: Install extrantsr","title":"MRIreduce: An R Package for ROI-Based Transformation of Neuroimages into High-Dimensional Data Frames","text":"extrantsr another package essential neuroimaging data analysis. Install using:","code":"devtools::install_github(\"muschellij2/extrantsr\")"},{"path":"https://uscbiostats.github.io/MRIreduce/index.html","id":"step-6-install-fsl","dir":"","previous_headings":"Installation Instructions","what":"Step 6: Install FSL","title":"MRIreduce: An R Package for ROI-Based Transformation of Neuroimages into High-Dimensional Data Frames","text":"FSL R package standalone software suite MRI fMRI analysis. Follow instructions [website] (https://fsl.fmrib.ox.ac.uk/fsl/docs/#/install/index) download install .","code":""},{"path":"https://uscbiostats.github.io/MRIreduce/reference/PartitionPipeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Partition Pipeline for Image Analysis — PartitionPipeline","title":"Partition Pipeline for Image Analysis — PartitionPipeline","text":"R6 class designed streamline processing pipeline image analysis, including steps initial processing combining independent variables reduced variables tissue type ROI.","code":""},{"path":[]},{"path":"https://uscbiostats.github.io/MRIreduce/reference/PartitionPipeline.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Partition Pipeline for Image Analysis — PartitionPipeline","text":"PartitionPipeline$new() PartitionPipeline$iproc() PartitionPipeline$supparfun() PartitionPipeline$map_suppar_roi() PartitionPipeline$parfun() PartitionPipeline$tissue_segment() PartitionPipeline$Cmb_tissue_type() PartitionPipeline$process_indep_variables() PartitionPipeline$Cmb_indep_with_dep() PartitionPipeline$clone()","code":""},{"path":[]},{"path":"https://uscbiostats.github.io/MRIreduce/reference/PartitionPipeline.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Partition Pipeline for Image Analysis — PartitionPipeline","text":"","code":"PartitionPipeline$new(   tind = NULL,   nfl = NULL,   main_dir = NULL,   tissue_type = NULL,   outp_volume = TRUE,   ICC_thresh_vec = NULL,   suppar_thresh_vec = seq(0.7, 1, 0.01),   B = 2000,   roi = NULL,   num_cores = NULL )"},{"path":[]},{"path":"https://uscbiostats.github.io/MRIreduce/reference/PartitionPipeline.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Partition Pipeline for Image Analysis — PartitionPipeline","text":"","code":"PartitionPipeline$iproc()"},{"path":[]},{"path":"https://uscbiostats.github.io/MRIreduce/reference/PartitionPipeline.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Partition Pipeline for Image Analysis — PartitionPipeline","text":"","code":"PartitionPipeline$supparfun()"},{"path":[]},{"path":"https://uscbiostats.github.io/MRIreduce/reference/PartitionPipeline.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Partition Pipeline for Image Analysis — PartitionPipeline","text":"","code":"PartitionPipeline$map_suppar_roi()"},{"path":[]},{"path":"https://uscbiostats.github.io/MRIreduce/reference/PartitionPipeline.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Partition Pipeline for Image Analysis — PartitionPipeline","text":"","code":"PartitionPipeline$parfun()"},{"path":[]},{"path":"https://uscbiostats.github.io/MRIreduce/reference/PartitionPipeline.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Partition Pipeline for Image Analysis — PartitionPipeline","text":"","code":"PartitionPipeline$tissue_segment()"},{"path":[]},{"path":"https://uscbiostats.github.io/MRIreduce/reference/PartitionPipeline.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Partition Pipeline for Image Analysis — PartitionPipeline","text":"","code":"PartitionPipeline$Cmb_tissue_type()"},{"path":[]},{"path":"https://uscbiostats.github.io/MRIreduce/reference/PartitionPipeline.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Partition Pipeline for Image Analysis — PartitionPipeline","text":"","code":"PartitionPipeline$process_indep_variables()"},{"path":[]},{"path":"https://uscbiostats.github.io/MRIreduce/reference/PartitionPipeline.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Partition Pipeline for Image Analysis — PartitionPipeline","text":"","code":"PartitionPipeline$Cmb_indep_with_dep()"},{"path":"https://uscbiostats.github.io/MRIreduce/reference/PartitionPipeline.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Partition Pipeline for Image Analysis — PartitionPipeline","text":"objects class cloneable method.","code":""},{"path":"https://uscbiostats.github.io/MRIreduce/reference/PartitionPipeline.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Partition Pipeline for Image Analysis — PartitionPipeline","text":"","code":"PartitionPipeline$clone(deep = FALSE)"},{"path":"https://uscbiostats.github.io/MRIreduce/reference/PartitionPipeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Partition Pipeline for Image Analysis — PartitionPipeline","text":"deep Whether make deep clone.","code":""},{"path":"https://uscbiostats.github.io/MRIreduce/reference/eve_Fl.html","id":null,"dir":"Reference","previous_headings":"","what":"Process FLAIR Neuroimages and Register to EVE Brain Template — eve_Fl","title":"Process FLAIR Neuroimages and Register to EVE Brain Template — eve_Fl","text":"function processes FLAIR (Fluid-Attenuated Inversion Recovery) neuroimages better lesion detection, especially periventricular area suppressing CSF signal. involves steps reading image, reorienting, bias correction using N4, brain extraction, registration EVE template, tissue segmentation. finally calculates intracranial volume outputs data.","code":""},{"path":"https://uscbiostats.github.io/MRIreduce/reference/eve_Fl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process FLAIR Neuroimages and Register to EVE Brain Template — eve_Fl","text":"","code":"eve_Fl(fpath, outpath, fsl_path, fsl_outputtype = \"NIFTI_GZ\")"},{"path":"https://uscbiostats.github.io/MRIreduce/reference/eve_Fl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process FLAIR Neuroimages and Register to EVE Brain Template — eve_Fl","text":"fpath Character string specifying path FLAIR image file. file NIFTI file format (.nii.gz). outpath Character string specifying output directory processed data saved. fsl_path Character string specifying path FSL software system. fsl_outputtype Character string specifying type output file format FSL; defaults \"NIFTI_GZ\".","code":""},{"path":"https://uscbiostats.github.io/MRIreduce/reference/eve_Fl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process FLAIR Neuroimages and Register to EVE Brain Template — eve_Fl","text":"Returns list containing three elements: intensities, tissues, brain_volume_cm3. element corresponds array intensities, segmented tissue data, calculated brain volumes, respectively. function also saves results .Rdata file specified output path.","code":""},{"path":"https://uscbiostats.github.io/MRIreduce/reference/eve_Fl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Process FLAIR Neuroimages and Register to EVE Brain Template — eve_Fl","text":"function uses specific FSL tools image processing steps reorientation standard space, bias correction N4 method ANTsR, brain extraction using robust method extrantsr. Segmentation different tissue types (CSF, grey matter, white matter) performed using FSL's FAST tool. Volumes calculated based segmented tissues.","code":""},{"path":"https://uscbiostats.github.io/MRIreduce/reference/eve_Fl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process FLAIR Neuroimages and Register to EVE Brain Template — eve_Fl","text":"","code":"## Not run: eve_Fl(\"path/to/your/flair/image.nii.gz\",        \"path/to/output/\",        \"/usr/local/fsl\",        \"NIFTI_GZ\") #> [1] \"2024-09-21 08:29:27.365781 Reading image: path/to/your/flair/image.nii.gz\" #> Error in oro.nifti::readNIfTI(..., reorient = reorient): File(s) not found! ## End(Not run)"},{"path":"https://uscbiostats.github.io/MRIreduce/reference/eve_T1.html","id":null,"dir":"Reference","previous_headings":"","what":"Process T1-weighted Brain MRI Data with FSL and Register to EVE Atlas — eve_T1","title":"Process T1-weighted Brain MRI Data with FSL and Register to EVE Atlas — eve_T1","text":"function takes T1-weighted brain MRI image, performs bias correction, reorientation standard space, brain extraction using FSL's BET, registration EVE brain template. segments brain volume different tissue types, calculates intracranial volume outputs results Rdata file.","code":""},{"path":"https://uscbiostats.github.io/MRIreduce/reference/eve_T1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process T1-weighted Brain MRI Data with FSL and Register to EVE Atlas — eve_T1","text":"","code":"eve_T1(   fpath,   outpath,   fsl_path = \"/Users/jinyaotian/fsl\",   fsl_outputtype = \"NIFTI_GZ\" )"},{"path":"https://uscbiostats.github.io/MRIreduce/reference/eve_T1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process T1-weighted Brain MRI Data with FSL and Register to EVE Atlas — eve_T1","text":"fpath Character string specifying path one T1-weighted MRI file. file NIFTI file format (.nii.gz). outpath Character string specifying output directory results saved Rdata file. fsl_path Character string specifying directory FSL installed. fsl_outputtype Character string specifying FSL output file type. Defaults \"NIFTI_GZ\".","code":""},{"path":"https://uscbiostats.github.io/MRIreduce/reference/eve_T1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process T1-weighted Brain MRI Data with FSL and Register to EVE Atlas — eve_T1","text":"Saves image data processing specified output path. Outputs Rdata file containing three components: image intensities array, segmented tissues array, brain volume metrics.","code":""},{"path":"https://uscbiostats.github.io/MRIreduce/reference/eve_T1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Process T1-weighted Brain MRI Data with FSL and Register to EVE Atlas — eve_T1","text":"function begins loading EVE brain template image registration. reads T1-weighted MRI file reorients standard space using FSL's fslreorient2std. Following reorientation, applies bias correction FSL's fsl_biascorrect, necessary correct field inhomogeneities can affect quantitative analysis. next step involves using FSL’s Brain Extraction Tool (BET) isolate brain non-brain tissue crucial accurate subsequent analysis. brain extraction, image registered EVE brain atlas using FLIRT, ensuring image aligned standard coordinate space comparable anatomical analysis. Subsequent registration, function uses FSL's FAST tool segment brain white matter, grey matter, cerebrospinal fluid, essential studying brain structure pathology. Finally, calculates volume tissues, providing key data points clinical research applications. step logs progress timestamps, aiding debugging optimization processing times.","code":""},{"path":"https://uscbiostats.github.io/MRIreduce/reference/eve_T1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process T1-weighted Brain MRI Data with FSL and Register to EVE Atlas — eve_T1","text":"","code":"## Not run: eve_T1(\"path/to/your/image.nii.gz\", \"path/to/output\", \"/usr/local/fsl\",  \"NIFTI_GZ\") #> [1] \"2024-09-21 08:29:28.517303 Reading image: path/to/your/image.nii.gz\" #> Error in oro.nifti::readNIfTI(..., reorient = reorient): File(s) not found! ## End(Not run)"},{"path":"https://uscbiostats.github.io/MRIreduce/reference/map2_eve.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Mask on EVE Template using Python and Nilearn — map2_eve","title":"Plot Mask on EVE Template using Python and Nilearn — map2_eve","text":"function plots mask image EVE template using Python's Nilearn library optionally saves plot image. ensures required Python libraries installed, handles appropriate Conda environment setup.","code":""},{"path":"https://uscbiostats.github.io/MRIreduce/reference/map2_eve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Mask on EVE Template using Python and Nilearn — map2_eve","text":"","code":"map2_eve(mask_img_path, cmap = \"bwr_r\", alpha = 1, save_path = NULL, ...)"},{"path":"https://uscbiostats.github.io/MRIreduce/reference/map2_eve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Mask on EVE Template using Python and Nilearn — map2_eve","text":"mask_img_path string representing file path mask NIfTI file. cmap colormap use. Either string (name matplotlib colormap) matplotlib colormap object. Default 'bwr_r'. alpha Transparency level overlay. Default 1. save_path string representing file path plot image saved (e.g., \"output.png\"). NULL, plot shown interactively instead saved. Default NULL. ... Additional arguments customize anatomical plot. arguments passed directly Python function nilearn.plotting.plot_anat. can specify parameters title, display_mode, cut_coords, dim, etc. details available options, refer official documentation : https://nilearn.github.io/stable/modules/generated/nilearn.plotting.plot_anat.html","code":""},{"path":"https://uscbiostats.github.io/MRIreduce/reference/map2_eve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Mask on EVE Template using Python and Nilearn — map2_eve","text":"None","code":""},{"path":"https://uscbiostats.github.io/MRIreduce/reference/map2_eve.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Mask on EVE Template using Python and Nilearn — map2_eve","text":"function first detects system architecture (ARM x86) ensures appropriate Conda environment set (Miniforge ARM Miniconda x86). checks installs required Python libraries: nilearn, nibabel, matplotlib. function loads Python environment calls plot_mask_on_eve function, plots mask EVE template. save_path provided, plot saved image specified location.","code":""},{"path":"https://uscbiostats.github.io/MRIreduce/reference/map2_eve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Mask on EVE Template using Python and Nilearn — map2_eve","text":"","code":"if (FALSE) { # \\dontrun{ map2_eve(   mask_img_path = \"/path/to/mask_nifti_GM_Volume.nii.gz\",   save_path = \"/path/to/save_output.png\",   cmap = \"bwr_r\",   alpha = 0.8,   title = \"Mask on EVE Template\" ) } # }"},{"path":"https://uscbiostats.github.io/MRIreduce/reference/map_feature2_loc.html","id":null,"dir":"Reference","previous_headings":"","what":"Map Reduced Feature Back to Brain Image Voxel Locations — map_feature2_loc","title":"Map Reduced Feature Back to Brain Image Voxel Locations — map_feature2_loc","text":"function maps given feature name voxel locations identifying pattern feature name. feature name contains \"reduced_var\", follows format \"Roi_module_reduced_var\" indicates reduced feature. Otherwise, follows format \"Roi_Vnumber\", reduced feature Partition. Based pattern, function extracts appropriate region interest (ROI) retrieves voxel locations intensity data.","code":""},{"path":"https://uscbiostats.github.io/MRIreduce/reference/map_feature2_loc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map Reduced Feature Back to Brain Image Voxel Locations — map_feature2_loc","text":"","code":"map_feature2_loc(feature_name, threshold, main_dir)"},{"path":"https://uscbiostats.github.io/MRIreduce/reference/map_feature2_loc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map Reduced Feature Back to Brain Image Voxel Locations — map_feature2_loc","text":"feature_name String. feature name. threshold numeric 0 1. Partition threshold value applied data. main_dir String. main directory containing data files.","code":""},{"path":"https://uscbiostats.github.io/MRIreduce/reference/map_feature2_loc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map Reduced Feature Back to Brain Image Voxel Locations — map_feature2_loc","text":"data frame containing voxel locations (x,y,z Coordinates) corresponding extracted mapping column.","code":""},{"path":"https://uscbiostats.github.io/MRIreduce/reference/map_feature2_loc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Map Reduced Feature Back to Brain Image Voxel Locations — map_feature2_loc","text":"voxel brain image corresponds specific feature, establishing one--one mapping voxel feature. relationship allows us localize particular brain features specific brain areas voxel level, enabling visualization features. However, applying Super-Partition Partition techniques, multiple brain features aggregated single reduced feature part data reduction process. goal following function relate reduced feature back component features, subsequently identify brain image voxels component features mapped. function performs following steps: Check Feature Name Format: first checks feature_name contains \"reduced_var\". , function assumes format \"Roi_module_reduced_var\", otherwise assumes format \"Roi_Vnumber\". Extract ROI Mapping Information: \"Roi_module_reduced_var\" format, ROI module number extracted, corresponding partition file read retrieve mapping vector. \"Roi_Vnumber\" format, V number extracted feature name used mapping vector. Extract Voxel Locations: mapping vector used extract voxel locations intensity data.","code":""},{"path":"https://uscbiostats.github.io/MRIreduce/reference/map_feature2_loc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map Reduced Feature Back to Brain Image Voxel Locations — map_feature2_loc","text":"","code":"if (FALSE) { # \\dontrun{ loc_df <- map_feature2_loc(feature_name = \"inferior_frontal_gyrus_left_module4_reduced_var_13\", threshold = 0.8, main_dir = \"/path/to/data\") } # }"},{"path":"https://uscbiostats.github.io/MRIreduce/reference/run_partition_pipeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Partition Pipeline on Neuroimaging Data — run_partition_pipeline","title":"Run Partition Pipeline on Neuroimaging Data — run_partition_pipeline","text":"function initializes executes partitioning pipeline designed processing neuroimaging data. handles tasks image processing, super partition analysis, mapping, combining data based specified thresholds parameters.","code":""},{"path":"https://uscbiostats.github.io/MRIreduce/reference/run_partition_pipeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Partition Pipeline on Neuroimaging Data — run_partition_pipeline","text":"","code":"run_partition_pipeline(   tind,   nfl,   main_dir,   tissue_type,   ICC_thresh_vec,   num_cores = 1,   suppar_thresh_vec = seq(0.7, 1, 0.01),   B = 2000,   outp_volume = TRUE )"},{"path":"https://uscbiostats.github.io/MRIreduce/reference/run_partition_pipeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Partition Pipeline on Neuroimaging Data — run_partition_pipeline","text":"tind Index identifier type tissue analysis. nfl List file names (full paths) need processed. main_dir Main directory outputs intermediate results saved. tissue_type Type tissue segmentation. ICC_thresh_vec vector threshold values Intraclass Correlation Coefficient used Partition Algorithm. num_cores Number cores use parallel processing. Default 1. suppar_thresh_vec Optional; sequence threshold values used Super Partitioning. Default sequence 0.7 1 0.01. B Optional; maximum size modules considered partitioning. Default 2000. outp_volume Optional; logical indicating whether volume outputs generated. Default TRUE.","code":""},{"path":"https://uscbiostats.github.io/MRIreduce/reference/run_partition_pipeline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Partition Pipeline on Neuroimaging Data — run_partition_pipeline","text":"function return value output results directly specified main_dir side effects processing steps.","code":""},{"path":"https://uscbiostats.github.io/MRIreduce/reference/run_partition_pipeline.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run Partition Pipeline on Neuroimaging Data — run_partition_pipeline","text":"function configures runs series operations typical neuroimage analysis, especially focusing ROI-based transformations. step pipeline, initial image processing (iproc) final combination independent variables reduced variables (Cmb_indep_with_dep), executed sequence. Adjustments pipeline's behavior can made changing function parameters, allowing custom analysis flows.","code":""},{"path":"https://uscbiostats.github.io/MRIreduce/reference/suppar.html","id":null,"dir":"Reference","previous_headings":"","what":"Super Partitioning of Variables Based on Correlation — suppar","title":"Super Partitioning of Variables Based on Correlation — suppar","text":"function identifies groups highly correlated variables modules given dataset using series correlation computations stored across temporary files. utilizes hierarchical chunk processing method handle large datasets.","code":""},{"path":"https://uscbiostats.github.io/MRIreduce/reference/suppar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Super Partitioning of Variables Based on Correlation — suppar","text":"","code":"suppar(   tmp,   thresh = NULL,   n.chunkf = 10000,   B = 2000,   compute.corr = TRUE,   dist.thresh = NULL,   dir.tmp )"},{"path":"https://uscbiostats.github.io/MRIreduce/reference/suppar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Super Partitioning of Variables Based on Correlation — suppar","text":"tmp data frame matrix data analyzed. thresh Numeric vector; thresholds defining correlation strength necessary consider two variables connected dependent. function creates modules variables correlations thresholds. n.chunkf Integer; number features process per chunk correlation analysis. B Integer; maximum size module. module reaches size, merged modules even members correlated members another module. compute.corr Logical; correlation computed (TRUE) pre-computed correlations used (FALSE). dist.thresh Optional; distance threshold apply computing correlations, allowing spatial constraints correlation computation. dir.tmp Directory path temporary correlation files stored.","code":""},{"path":"https://uscbiostats.github.io/MRIreduce/reference/suppar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Super Partitioning of Variables Based on Correlation — suppar","text":"list containing two elements: - list character vectors, vector contains names variables form module. - character vector independent variables included module.","code":""},{"path":"https://uscbiostats.github.io/MRIreduce/reference/suppar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Super Partitioning of Variables Based on Correlation — suppar","text":"suppar function starts setting environment preparing data. compute.corr TRUE, computes correlation stores results temporary files dir.tmp. loads files one one, aggregates correlated variables groups using partagg function, finally, cleans temporary files. corfun1 corfun2 helper functions called within suppar manage computation correlations chunks saving manageable manner, helps processing large datasets without overwhelming memory resources. partagg, Rcpp function, efficiently processes aggregates variables modules based correlation data read temporary files. ensures size module exceed B parameter.","code":""},{"path":"https://uscbiostats.github.io/MRIreduce/reference/suppar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Super Partitioning of Variables Based on Correlation — suppar","text":"","code":"data(matrix(rnorm(10000), ncol = 100)) suppar(tmp = data, thresh = c(0.5, 0.3, 0.1), n.chunkf = 100, B = 50,        compute.corr = TRUE, dir.tmp = \"path/to/tempdir\") #> Error in 1:ncol(tmp): argument of length 0"}]
